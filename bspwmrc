#! /bin/sh

STARTUP=(\
	sxhkd
	numlockx
	unclutter
	polybar
	mpd
)

for app in ${STARTUP[@]}; do
	PID=$(pidof $app)
	if [ ! -z $PID ]; then
		kill -9 $PID
	fi
done

unclutter --timeout 1 &
picom --config $HOME/.config/picom/picom.conf --experimental-backends &
setxkbmap -option caps:escape &
xsetroot -cursor_name left_ptr &

if [ "$(hostname)" == "COMPii" ]; then
	numlockx &
	nvidia-settings --load-config-only &
	nvidia-settings --assign GPULogoBrightness=0 & 
	sxhkd -c "$HOME/.config/sxhkd/sxhkdrc" &
	wal -R &
	#timeout 0.1s xsettingsd -c $HOME/.config/xsettingsd/xsettingsd.conf &
	$HOME/.config/bspwm/bspwm_polybar.sh &
	mpd &
	
	bspc config pointer_motion_interval 7ms
	bspc monitor DVI-D-0 -d 1 2 3 4 5 6 7 8 9 0
	bspc monitor HDMI-0 -d
	
	bspc config -m HDMI-0 bottom_padding 0
	bspc config -m DVI-D-0 top_padding 28

	bspc rule -a firefox desktop="2" follow=on
	bspc rule -a SoulseekQt desktop="2" follow=on
	bspc rule -a Steam desktop="7" state=floating
	bspc rule -a Wpg state=floating rectangle=580x580+1310+470
	bspc rule -a Nvidia-settings state=floating
	bspc rule -a dolphin desktop="9"

elif ["$(hostname)" == "LAPPii" ]; then
	sxhkd -c "$HOME/path/to/config" &
	$HOME/path/to/polybar

	bspc monitor -d I II III IV V VI VII VIII IX X

fi


bspc config border_width         2
bspc config window_gap          10
bspc config left_padding	 0
bspc config right_padding	 0

bspc config split_ratio           		0.5
bspc config borderless_monocle    		true
bspc config gapless_monocle       		true
bspc config click_to_focus	  		true
bspc config focus_follows_pointer 		false	
bspc config focus_by_distance			true
bspc config remove_disabled_monitors		true	
bspc config merge_overlapping_monitors		false
bspc config ignore_ewmh_focus			true

# source the colors
. "${HOME}/.cache/wal/colors.sh"
# Set the border colors
bspc config normal_border_color 	"$color0"
bspc config active_border_color 	"$color4"
bspc config focused_border_color 	"$color14"
bspc config presel_border_color 	"$color1"
bspc config urgent_border_color 	"$color15"

# Shadows on floating windows only
bspc subscribe node_state | while read -r _ _ _ node state status; do
	if [[ "$state" == "floating" ]]; then
		case "$status" in
			off) xprop -id "$node" -remove _COMPTON_SHADOW;;
			on) xprop -id "$node" -f _COMPTON_SHADOW 32c -set _COMPTON_SHADOW 1;;
		esac
	fi
done
